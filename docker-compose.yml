
version: '3.6'

services:
  postgres:
    container_name: postgres
    restart: always
    image: postgres:10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file: .env
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 5
  graphql-engine:
    container_name: graphql-engine
    image: hasura/graphql-engine:v1.0.0-beta.4
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
  django:
    container_name: django
    restart: always
    build: ./django
    ports:
      - 8000:8000
      - 3000:3000
    #secrets:
    #  - django_secret_key
    #  - aws_access_key_id
    #  - aws_secret_access_key
    volumes:
      - ./django:/var/www/django
      - webapp_build:/var/www/django/webapp_build
    #command: dockerize -wait tcp://postgres:5432 /var/www/django/scripts/run_dev.sh
  webapp:
    container_name: webapp
    restart: always
    build: ./webapp
    ports:
      - 35729:35729
      - 7000:7000
    volumes:
      - ./webapp:/webapp
      - node_modules:/webapp/node_modules
      - webapp_build:/webapp/build
    #command: /webapp/scripts/run_dev.sh
  #redis:
  #  container_name: redis
  #  image: redis
  #  restart: always
  #  ports:
  #    - 6379:6379
  #  healthcheck:
  #    test: ["CMD", "redis-cli","ping"]
  #    interval: 30s
  #    timeout: 10s
  #    retries: 3

#secrets:
#   django_secret_key:
#     file: secrets/django_secret_key

volumes:
  node_modules:
  webapp_build:
